{
	"info": {
		"_postman_id": "2f3ed75d-68ac-42ab-acc5-b328cc0b4117",
		"name": "api-testing-the-toolshop",
		"description": "Test API contact với các scenarios khác nhau (data-driven)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37366733"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const caseId = pm.iterationData.get(\"test_case_id\");\r",
									"const role = pm.iterationData.get(\"role\");\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    const res = pm.response.json();\r",
									"\r",
									"    if (res && res.access_token) {\r",
									"        if (role === \"admin\") {\r",
									"            pm.environment.set(\"admin_token\", res.access_token);\r",
									"            console.log(`[${caseId}] Saved admin_token`);\r",
									"        } else if (role === \"user\") {\r",
									"            pm.environment.set(\"user_token\", res.access_token);\r",
									"            console.log(`[${caseId}] Saved user_token`);\r",
									"        }\r",
									"    } else {\r",
									"        console.warn(`[${caseId}] Response 200 nhưng không có access_token`);\r",
									"    }\r",
									"} else {\r",
									"    console.warn(`[${caseId}] Login failed with status ${pm.response.code}`);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const api = pm.iterationData.get(\"api\");\r",
									"const caseId = pm.iterationData.get(\"test_case_id\");\r",
									"const caseName = pm.iterationData.get(\"test_case_name\");\r",
									"\r",
									"if (api !== \"login\") {\r",
									"    console.log(`[${caseId}] ${caseName} - Skip because api != login`);\r",
									"    pm.execution.skipRequest();\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*"
							},
							{
								"key": "Accept-Language",
								"value": "en,vi;q=0.9,vi-VN;q=0.8"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "empty"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "cors"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-site"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Not;A=Brand\";v=\"99\", \"Google Chrome\";v=\"139\", \"Chromium\";v=\"139\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "contact",
			"item": [
				{
					"name": "create-message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const caseId = pm.iterationData.get(\"test_case_id\");",
									"const caseName = pm.iterationData.get(\"test_case_name\");",
									"const expectedStatus = Number(pm.iterationData.get(\"expected_status\"));",
									"",
									"pm.test(`[${caseId}] ${caseName} - Full validation`, function () {",
									"    pm.response.to.have.status(expectedStatus);",
									"",
									"    if (pm.response.code === 200) {",
									"        const res = pm.response.json();",
									"",
									"        pm.expect(res).to.have.property('id');",
									"        pm.expect(res).to.have.property('name');",
									"        pm.expect(res).to.have.property('email');",
									"        pm.expect(res).to.have.property('subject');",
									"        pm.expect(res).to.have.property('message');",
									"        pm.expect(res).to.have.property('status');",
									"        pm.expect(res).to.have.property('created_at');",
									"",
									"        pm.expect(res.id).to.be.a('number').and.to.be.above(0);",
									"",
									"        pm.environment.set(\"message_id\", res.id);",
									"",
									"    } else if (pm.response.code === 422) {",
									"        const res = pm.response.json();",
									"",
									"        pm.expect(res).to.have.property('message');",
									"        if (res.errors) {",
									"            pm.expect(res.errors).to.be.an('object');",
									"        }",
									"",
									"    } else if (pm.response.code >= 400) {",
									"        const res = pm.response.json();",
									"",
									"        pm.expect(res).to.satisfy(data => ",
									"            data.hasOwnProperty('message') || data.hasOwnProperty('error')",
									"        );",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const api = pm.iterationData.get(\"api\");\r",
									"const caseId = pm.iterationData.get(\"test_case_id\");\r",
									"const caseName = pm.iterationData.get(\"test_case_name\");\r",
									"\r",
									"if (api !== \"create_message\") {\r",
									"    console.log(`[${caseId}] ${caseName} - Skip because api != create_message`);\r",
									"    pm.execution.skipRequest();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"subject\": \"{{subject}}\",\n    \"message\": \"{{message}}\",\n    \"status\": \"{{status}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const caseId = pm.iterationData.get(\"test_case_id\");",
									"const caseName = pm.iterationData.get(\"test_case_name\");",
									"const expectedStatus = Number(pm.iterationData.get(\"expected_status\"));",
									"",
									"pm.test(`[${caseId}] ${caseName} - Full validation`, function () {",
									"    pm.response.to.have.status(expectedStatus);",
									"",
									"    const role = pm.iterationData.get(\"role\");",
									"",
									"    if (pm.response.code === 200) {",
									"        const res = pm.response.json();",
									"",
									"        if (role === \"admin\") {",
									"            pm.expect(res.data.length).to.be.above(1);",
									"            pm.expect(res.total).to.be.above(1);",
									"        }",
									"",
									"        if (role === \"user\") {",
									"            res.data.forEach(c => pm.expect(c.user_id).to.eql(4));",
									"        }",
									"    } else if (pm.response.code === 401 && role === \"none\") {",
									"        const res = pm.response.json();",
									"",
									"        pm.expect(res.message).to.include(\"Unauthorized\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const api = pm.iterationData.get(\"api\");\r",
									"const caseId = pm.iterationData.get(\"test_case_id\");\r",
									"const caseName = pm.iterationData.get(\"test_case_name\");\r",
									"\r",
									"if (api !== \"get_messages\") {\r",
									"    console.log(`[${caseId}] ${caseName} - Skip because api != get_messages`);\r",
									"    pm.execution.skipRequest();\r",
									"}\r",
									"\r",
									"const role = pm.iterationData.get(\"role\");\r",
									"if (role === \"admin\") {\r",
									"    pm.request.headers.add({ \r",
									"        key: \"Authorization\", \r",
									"        value: \"Bearer \" + pm.environment.get(\"admin_token\") \r",
									"    });\r",
									"} else if (role === \"user\") {\r",
									"    pm.request.headers.add({ \r",
									"        key: \"Authorization\", \r",
									"        value: \"Bearer \" + pm.environment.get(\"user_token\") \r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"description": "Admin token required to view all messages",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/messages?page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"messages"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update-status-message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const caseId = pm.iterationData.get(\"test_case_id\");",
									"const caseName = pm.iterationData.get(\"test_case_name\");",
									"const expectedStatus = Number(pm.iterationData.get(\"expected_status\"));",
									"",
									"pm.test(`[${caseId}] ${caseName} - Full validation`, function () {",
									"    pm.response.to.have.status(expectedStatus);",
									"",
									"    const res = pm.response.json();",
									"    const role = pm.iterationData.get(\"role\");",
									"    const success = pm.iterationData.get(\"success\");",
									"",
									"    if (role === \"admin\") {",
									"        if (pm.response.code === 200) {",
									"            pm.expect(res).to.have.property(\"success\");",
									"            pm.expect(res.success).to.eql(success);",
									"        } else if (pm.response.code === 404) {",
									"            pm.expect(res).to.have.property(\"message\");",
									"            pm.expect(res.message).to.eql(\"Resource not found\");",
									"        }",
									"    } else if (role === \"user\") {",
									"        if (pm.response.code === 401) {",
									"            pm.expect(res.message).to.include(\"Unauthorized\");",
									"        }",
									"    } else if (role === \"none\") {",
									"        if (pm.response.code === 401) {",
									"            pm.expect(res.message).to.include(\"Unauthorized\");",
									"        }",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const api = pm.iterationData.get(\"api\");\r",
									"const caseId = pm.iterationData.get(\"test_case_id\");\r",
									"const caseName = pm.iterationData.get(\"test_case_name\");\r",
									"\r",
									"if (api !== \"update_status_message\") {\r",
									"    console.log(`[${caseId}] ${caseName} - Skip because api != update_status_message`);\r",
									"    pm.execution.skipRequest();\r",
									"}\r",
									"\r",
									"const role = pm.iterationData.get(\"role\");\r",
									"if (role === \"admin\") {\r",
									"    pm.request.headers.add({ \r",
									"        key: \"Authorization\", \r",
									"        value: \"Bearer \" + pm.environment.get(\"admin_token\") \r",
									"    });\r",
									"} else if (role === \"user\") {\r",
									"    pm.request.headers.add({ \r",
									"        key: \"Authorization\", \r",
									"        value: \"Bearer \" + pm.environment.get(\"user_token\") \r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"description": "Admin token required to update message status",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"{{new_status}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/messages/{{message_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"messages",
								"{{message_id}}",
								"status"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "{{base_url}}"
		},
		{
			"key": "auth_token",
			"value": "{{auth_token}}"
		},
		{
			"key": "message_id",
			"value": "{{message_id}}"
		}
	]
}